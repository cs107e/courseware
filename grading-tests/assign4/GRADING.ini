[DEFAULT]
class = MangoRunDiffOutput
timeout = 10

modules_to_grade = backtrace.c malloc.c backtrace_asm.s
test_program = heap_workflow
executable = %(test_program)s.bin
make_prefix = make -f %(dirpath)s/GRADING.make MY_MODULE_SOURCES="%(modules_to_grade)s"
soln_log_path = %(dirpath)s/LOGS/%(test_program)s.staff

[10-BacktraceGather]
test_program = agtest_backtrace_gather
description = `backtrace` harvests stack frames from call stack
modules_to_grade = backtrace.c backtrace_asm.s
priority = 1

[11-StackProtector]
test_program = agtest_stack_protector
description = `stack protector` detects and reports stack buffer overflow
modules_to_grade = backtrace.c backtrace_asm.s
accept_match_ratio = .98
allow_grader_override = True
priority = 1

[20-MallocRecycle]
test_program = agtest_malloc_recycle
description = `malloc` re-uses existing blocks if possible, rather than `sbrk` to extend heap segment
priority = 1

[21-MallocSplit]
test_program = agtest_malloc_split
description = `malloc` splits a recycled block iff remainder is large enough for separate block
priority = 1

[22-MallocCoalesce]
test_program = agtest_malloc_coalesce
description = `free` coalesces freed block with neighbor blocks to right that are also free
priority = 1

[23-MallocEdgeCases]
test_program = agtest_malloc_edge
description = correct handling of unusual requests: `malloc(0)`, `malloc(TOO_LARGE)`, `free(NULL)`
priority = 2

[24-MallocWorkflow]
test_program = agtest_malloc_workflow
description = Running heap workflow does not yield errors, and indicates that freed blocks are being recycled
priority = 1
timeout = 30

[30-ExtensionRedzone]
objective = Mini-Valgrind alert detects write outside payload (both BEFORE and AFTER)
modules_to_grade = backtrace.c backtrace_asm.s malloc.c cstart.c
test_program = agtest_malloc_redzones
has_output = True
class = Extension
extension_name = Mini-Valgrind redzones
ntests = 2

[31-ExtensionMallocReport]
objective = Mini-Valgrind prints a malloc usage report at program exit
modules_to_grade = backtrace.c backtrace_asm.s malloc.c cstart.c
test_program = agtest_malloc_report
has_output = True
class = Extension
extension_name = Mini-Valgrind leaks
ntests = 2

[40-StyleReflection]
class = StyleReflection
category = Style Reflection

[41-TestsQuality]
prompt = Enter evaluation of test quality:
class = Quality
category = Tests
